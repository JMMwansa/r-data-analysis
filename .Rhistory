#Download data
download.file("https://ndownloader.figshare.com/files/2292169
data/portal_data_joined.csv")
#Download data
download.file("https://ndownloader.figshare.com/files/2292169",
"data/portal_data_joined.csv")
#Load the data
surveys <- read.csv("data/portal_data_joined.csv")
View(surveys)
View(surveys)
#Examine the first 6 lines
head (surveys)
str(surveys)
#Indexing and subsettings
surveys [1, 1] #First element in first column
surveys [1, 6] #First element in first column
surveys [1:3, 7] #First three elements in seventh column
surveys [, 1]#All the values in the first column
surveys [8:11, ]#All the values in rows 8 to 11
download.file("https://pad-software-carpentry.org/2018-06-18-huddersfield",
"data/portal_data_joined.csv")
download.file("http://pad-software-carpentry.org/2018-06-18-huddersfield",
"data/portal_data_joined.csv")
download.file("http://pad.software-carpentry.org/2018-06-18-huddersfield",
"data/portal_data_joined.csv")
surveys <-read.csv(data/portal_data_joined.csv)
surveys_200 <-surveys[200,]
nrow(surveys)#gives you the number of rows in a data.frame
surveys_last <- surveys [nrow, ]
n_row(surveys)#gives you the number of rows in a data.frame
n_row(surveys)#gives you the number of rows in a data.frame
nrow(surveys)#gives you the number of rows in a data.frame
n_rows <- nrow(surveys)
surveys_last<- surveys[200, ]
tail(surveys)
middle_row <- nrow(surveys)/2
surveys_middle <- surveys[middle_row, ]
sex <- factor (c("male", "female", "male"))
sex <- factor (c("male", "female", "female", "male"))
levels (sex)
nlevels(sex)
#Plot of females capture against males
plot(surveys$sex)
#Create a subset of the sex data
sex <-surveys$sex
levels(sex)
#Overwrite the missing label
levels(sex)[1] <- "Undertermined"
levels(sex)
levels(sex)[2]<-"M"
levels(sex)[3]<-"F"
levels(sex)
levels(sex)[2:3]<- c("Female", "Male")
levels(sex)
plot(sex)
#Reorder the position of the factors to put 'undetermine' last
sex <- factor(sex, levels = c("Female", "Male", "Undetermined"))
plot(sex)
#Create a subset of the sex data
sex <-surveys$sex
levels(sex)
#Overwrite the missing label
levels(sex)[1] <- "Undertermined"
levels(sex)
#Exercise -Change the label F to Female and M to Male
levels(sex)[2]<-"F"
levels(sex)[3]<-"M"
levels(sex)
levels(sex)[2:3]<- c("Female", "Male")
levels(sex)
plot(sex)
#Reorder the position of the factors to put 'undetermine' last
sex <- factor(sex, levels = c("Female", "Male", "Undetermined"))
plot(sex)
head(surveys)
surveys[,2]
surveys[,"month"]
surveys$month
#Installing Tidyverse
install.packages("tidyverse")
#Load the library to make available to scripts
library("tidyverse")
#Load the surveys data using read_csv from readr
surveys <-read_csv("data/portal_data_joined.csv")
head(surveys)
#Load the surveys data using read_csv from readr
download.file("https://ndownloader.figshare.com/files/2292169",
"data/portal_data_joined.csv")
surveys <-read_csv("data/portal_data_joined.csv")
str(surveys)
head(surveys)
surveys
colnames(surveys)
head(surveys)
#Use the square bracket subsetting to select rows from 1978 only
surveys$4
#Use the square bracket subsetting to select rows from 1978 only
surveys [ ,4]
#Use the square bracket subsetting to select rows from 1978 only
surveys [surveys$year == "1978"]
#Use the square bracket subsetting to select rows from 1978 only
surveys [surveys$year == "1978", ]
#dplyr
#filter-used to select rows
filter(surveys, year == 1978)
select(surveys, year, plot_id, species_id)
surveys_filtered <- filter (surveys, year ==1978)
surveys_filtered
surveys_filtered <- filter (surveys, year == 1978)
surveys_filtered
select(surveys_filtered, year, plot_id, species_id)
surveys %>%
filter(year == 1978) %>%
select(year, plot_id, species_id)
?select
surveys %>%
select(weight, species)
survey %>%
mutate(weight_kg = weight/1000) #The mutation here is converting the weight from grams to kg
survey %>%
mutate(weight_kg = weight/1000)
surveys %>%
mutate(weight_kg = weight/1000)
select(starts_with("w"))
#pipe surveys first
mutate(hindfoot_half = hindfoot_length/2) %>%
#pipe surveys first
mutate(hindfoot_half = hindfoot_length/2) %>%
filter(hindfoot_half < 30) %>%
#pipe surveys first
mutate(hindfoot_half = hindfoot_length/2) %>%
filter(hindfoot_half < 30) %>%
select(species_id, hindfoot)
#pipe surveys first
mutate(hindfoot_half = hindfoot_length/2) %>%
filter(hindfoot_half < 30) %>%
select(species_id, hindfoot_half)
surveys %>%
select(starts_with("w")) %>%
filter(is.na(weight)) #filters OUT rows in column weight that are NOT na(missing data)
surveys %>%
select(starts_with("w")) %>%
filter(!is.na(weight)) #filters OUT rows in column weight that are NOT na(missing data)
surveys %>%
mutate(weight_kg = weight/1000) %>%  This will create a new column with weight in kg
table(surveys$year)
#cheching how many different years the observations were run for
length(table(survey$year))
#cheching how many different years the observations were run for
length(table(surveys$year))
range(surveys$year)
range(surveys$species)
summary(surveys)
surveys %>%
surveys %>%
group_by(year) %>%
surveys %>%
group_by(year) %>%
summarise(mean_hindfoot_length = mean(hindfoot_length))
surveys %>%
group_by(year) %>%
surveys %>%
group_by(year) %>%
summarise(mean_hindfoot_length = mean(hindfoot_length))
na.rm = TRUE))
surveys %>%
group_by(year) %>%
summarise(mean_hindfoot_length = mean(hindfoot_length, na.rm = TRUE))
surveys %>%
group_by(sex, species_id)
surveys %>%
filter(!is.na(weight)) %>%
group_by(sex, species_id)
surveys %>%
filter(!is.na(weight)) %>%
group_by(sex, species_id) %>%
surveys %>%
filter(!is.na(weight)) %>%
group_by(sex, species_id) %>%
surveys %>%
filter(!is.na(weight)) %>%
group_by(sex, species_id) %>%
surveys %>%
surveys %>%
filter(!is.na(weight)) %>%
group_by(sex, species_id) %>%
surveys %>%
filter(!is.na(weight)) %>%
surveys %>%
group_by(year) %>%
summarise(mean_hindfoot_length = mean(hindfoot_length, na.rm = TRUE)) #TO GET RID OF N/A
surveys %>%
filter(!.is.na(weight)) %>%
group_by(sex, species_id) %>%
summarise(mean_weight = mean(weight))
surveys %>%
filter(!is.na(weight)) %>%
group_by(sex, species_id) %>%
summarise(mean_weight = mean(weight))
surveys %>% filter(!is.na(weight)) %>% group_by(sex, species_id) %>% summarise(mean_weight = mean(weight)), min_weight = sd_weight = sd(weight))
surveys %>%
filter(!is.na(weight)) %>%
group_by(sex, species_id) %>%
summarise(mean_weight = mean(weight),min_weight = min(weight), sd_weight = sd(weight))
count(sex, species)
surveys %>%
count(sex, species)
print(n = 81)
surveys %>%
count(sex, species) %>%
print(n = 81)
surveys %>%
count(species, sort = TRUE)
surveys %>%
count(species, sort = TRUE)
surveys %>%
count(sex, species) %>%
arrange(species, desc())
surveys %>%
count(sex, species) %>%
arrange(species, desc(n))
surveys %>%
group_by(plot_type)) %>%
surveys %>%
group_by(plot_type))
surveys %>%
group_by(plot_type))
surveys %>%
count(plot_type)
?group_by
group_by(plot_type)) %>%
surveys %>%
select(year, genus, species_id, weight)
select(year, genus, species_id, weight)
surveys %>%
select(year, genus, species_id, weight)
colnames(surveys)
surveys %>%
group_by(year) %>%
summarise(max_weight = max(weight)) %>%
surveys %>%
group_by(year) %>%
summarise(max_weight = max(weight))
arrange(desc(max_weight))
surveys %>%
filter(!is.na(weight)) %>%
group_by(year) %>%
summarise(max_weight = max(weight)) %>%
arrange(desc(max_weight))
surveys %>%
filter(!is.na(weight)) %>%
group_by(year) %>%
filter(weight == max(weight)) %>%
select(year, genus, species_id, weight)
surveys %>%
filter(!is.na(weight)) %>%
group_by(year) %>%
filter(weight == max(weight)) %>%
select(year, genus, species_id, weight) %>%
arrange(desc(weight))
surveys_complete <-
surveys_complete %>%
filter(species_id %in% species_counts$species_id)
dim(surveys_complete)
dim(surveys_complete)
surveys_complete <-
surveys %>%
filter(!is.na(weight),
!is.na(hindfoot_length),
!is.na(sex))
#keep the species for which there are atleast 50 observations
species_counts <- surveys_complete %>%
count(species_id) %>%
filter(n>=50)
surveys_complete <-
surveys_complete %>%
filter(species_id %in% species_counts$species_id)
dim(surveys_complete)
write_csv(surveys_complete, "data/surveys_complete.csv")
ggplot(data = surveys_complete, mapping =aes(x= weight), y = hindfoot_length))
ggplot(data = surveys_complete, mapping =aes(x= weight, y = hindfoot_length))
ggplot(data = surveys_complete, mapping =aes(x= weight, y = hindfoot_length)) + geom_point()
surveys_complete %>%
count(species_id)
filter(n >= 1000)
filter(n >= 1000)
num_species <- surveys_complete %>%
count(species_id) %>%
filter(n >= 1000)
surveys_complete %>%
filter(species_id %in% num_species$species_id) %>%
#reduce the surveys_complete object so that it only contains species with atleast 50 observation(these
#species are in object species_counts)
surveys_complete <-
surveys_complete %>%
filter(species_id %in% species_counts$species_id)
surveys_complete %>%
filter(species_id %in% num_species$species_id)
animals %in% other_animals
animals %in% other_animals
animals<- c("pig", "cat", "dog", "donkey", "gorilla", "mouse")
animals %in% other_animals
other_animals<- c("zebra", "parrot", "donkey", "cat", "camel")
animals %in% other_animals
other_animals %in% animals
intersect(animals, other_animals)
ggplot(data = surveys_complete, mapping =aes(x= weight, y = hindfoot_length)) + geom_point()
ggplot(data = surveys_complete, mapping =aes(x= weight, y = hindfoot_length)) + geom_point(alpha = 0.1)
ggplot(data = surveys_complete, mapping =aes(x= weight, y = hindfoot_length)) + geom_point(alpha = 0.1, colour = "blue")
ggplot(data = surveys_complete, mapping =aes(x= weight, y = hindfoot_length)) + geom_point(alpha = 0.1, colour = aes(color = species_id)
ggplot(data = surveys_complete, mapping =aes(x= weight, y = hindfoot_length)) + geom_point(alpha = 0.1, colour = aes(color = species_id))
ggplot(data = surveys_complete, mapping =aes(x= weight, y = hindfoot_length)) + geom_point(alpha = 0.1, aes(color = species_id))
ggplot(data = surveys_complete, mapping =aes(x= species_, y = hindfoot_length)) + geom_boxplot() + geom_jitter(alpha = 0.1, color = tomato))
ggplot(data = surveys_complete, mapping =aes(x= species_, y = hindfoot_length)) + geom_boxplot() + geom_jitter(alpha = 0.1, color = "tomato")
ggplot(data = surveys_complete, mapping =aes(x= species_id, y = hindfoot_length)) + geom_boxplot() + geom_jitter(alpha=0.1, color = "tomato")
source('C:/Users/joemw/Desktop/data-analysis/4_data-analysis_dplyr.R', echo=TRUE)
source('C:/Users/joemw/Desktop/data-analysis/4_data-analysis_dplyr.R', echo=TRUE)
source('C:/Users/joemw/Desktop/data-analysis/4_data-analysis_dplyr.R', echo=TRUE)
source('C:/Users/joemw/Desktop/data-analysis/4_data-analysis_dplyr.R', echo=TRUE)
yearly_counts <- surveys_complete %>%
surveys_complete %>%
group_by(year, species_id) %>%
tally()
yearly_counts <-
surveys_complete %>%
group_by(year, species_id) %>%
tally()
surveys_complete %>%
group_by(year, species_id) %>%
tally()
ggplot(data = yearly_counts, mapping) = aes(x year,y =n))+ geom_line()
ggplot(data = yearly_counts, mapping = aes(x year,y =n))+ geom_line()
ggplot(data = yearly_counts, mapping = aes(x = year,y =n))+ geom_line()
ggplot(data = yearly_counts, mapping = aes(x = year,y =n, group = species_id))+ geom_line()
ggplot(data = yearly_counts, mapping = aes(x = year,y =n, group = species_id))+ geom_line(color = species_id)
ggplot(data = yearly_counts, mapping = aes(x = year,y =n, colour = species_id))+ geom_line()
ggplot(data = yearly_counts, mapping = aes(x = year,y =n ))+ geom_line() + facet_wrap(~species_id)
yearly_sex_counts<-surveys_complete %>%
group_by(year, species_id, sex) %>%
tally()
ggplot(data = yearly_sex_counts, mapping = aes(x = year,y =n, colour = sex ))+ geom_line() + facet_wrap(~species_id)
ggplot(data = yearly_sex_counts, mapping = aes(x = year,y =n, colour = sex ))+ geom_line() + facet_wrap(~species_id)+
ggtitle("Species counts over time")
ggplot(data = yearly_sex_counts, mapping = aes(x = year,y =n, colour = sex ))+ geom_line() + facet_wrap(~species_id)+
ggtitle("Species counts over time", x="year of observation", y="Number of species")
ggplot(data = yearly_sex_counts, mapping = aes(x = year,y =n, colour = sex ))+ geom_line() + facet_wrap(~species_id)+
labs(title="Species counts over time", x="year of observation", y="Number of species")
ggplot(data = yearly_sex_counts, mapping = aes(x = year,y =n, colour = sex ))+ geom_line() + facet_wrap(~species_id)+
labs(title="Species counts over time", x="year of observation", y="Number of species")+ theme(axis.text.x=element_text(angle=45))
#how to save your graph
ggsave("data/my_fancy_plot.pdf")
ggsave("data/my_fancy_plot.png", width = 15, height = 10, dpi=300)
